#cloud-config
hostname: ${hostname}

users:
  - name: ${username}
    ssh_authorized_keys:
      - ${ssh_pubkey}                  # your admin key
    groups: [sudo]
    sudo: "ALL=(ALL) NOPASSWD:ALL"

ssh_pwauth: false
disable_root: true

package_update: true
package_upgrade: true
packages:
  - software-properties-common
  - python3
  - python3-venv
  - python3-pip
  - rsync
  - git
  - curl
  - jq
  - net-tools
  - fail2ban
  - chrony
  - htop
  - tmux
  - unzip
  - ufw

write_files:
  # SSH daemon hardening
  - path: /etc/ssh/sshd_config.d/99-hardening.conf
    content: |
      PasswordAuthentication no
      PermitRootLogin no
      PubkeyAuthentication yes
      ChallengeResponseAuthentication no
      KbdInteractiveAuthentication no
      X11Forwarding no
      AllowTcpForwarding yes
      AllowAgentForwarding no
      ClientAliveInterval 300
      ClientAliveCountMax 2
      LoginGraceTime 20

  # Persistent journald
  - path: /etc/systemd/journald.conf.d/persistent.conf
    content: |
      [Journal]
      Storage=persistent
      SystemMaxUse=1G
      MaxRetentionSec=30day

  # Fail2ban (basic SSH protection)
  - path: /etc/fail2ban/jail.d/sshd.local
    content: |
      [sshd]
      enabled = true
      bantime = 30m
      findtime = 10m
      maxretry = 5

  # DB bastion private key (PEM) â€” used to SSH into db-* VMs
  - path: /home/${username}/.ssh/id_ed25519_dbs
    permissions: "0600"
    content: |
      ${ssh_privkey}

  # SSH client config for convenience
  - path: /home/${username}/.ssh/config
    permissions: "0600"
    content: |
      Host 10.20.4.*
        User ${username}
        IdentityFile /home/${username}/.ssh/id_ed25519_dbs
        IdentitiesOnly yes
        StrictHostKeyChecking accept-new

  # --- Added: make Ansible venv available in PATH for all users ---
  - path: /etc/profile.d/ansible.sh
    permissions: "0644"
    content: |
      if [ -d /opt/ansible/bin ]; then
        export PATH="/opt/ansible/bin:$PATH"
      fi
  
  # Clobal ansible cfg (system-wide)
  - path: /etc/ansible/ansible.cfg
    permissions: "0644"
    content: |
      [defaults]
      # Standard to any repo
      host_key_checking = False
      stdout_callback = yaml
      retry_files_enabled = False
      deprecation_warnings = False
      interpreter_python = auto

      # Global fact caching (if enabled in playbooks)
      fact_caching = jsonfile
      fact_caching_connection = /var/cache/ansible/facts
      fact_caching_timeout = 86400


runcmd:
  - install -d -m 700 -o ${username} -g ${username} /home/${username}/.ssh
  - chown -R ${username}:${username} /home/${username}/.ssh
  - chmod 700 /home/${username}/.ssh
  - chmod 600 /home/${username}/.ssh/*
  - systemctl restart ssh
  - systemctl enable --now chrony
  - systemctl enable --now fail2ban

  # Bastion-only firewall (do NOT do this on k8s nodes)
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow 22/tcp
  - ufw --force enable

  # Create Ansible venv and install Ansible
  - python3 -m venv /opt/ansible
  - /opt/ansible/bin/pip install --upgrade pip
  - /opt/ansible/bin/pip install "ansible>=9,<10" ansible-lint jinja2-cli[yaml]

  # Create ~/.ansible/tmp with correct ownership & perms (prevents permission denied)
  - install -d -m 700 -o ${username} -g ${username} /home/${username}/.ansible
  - install -d -m 700 -o ${username} -g ${username} /home/${username}/.ansible/tmp

  # Create cache dir for fact caching (if enabled in ansible.cfg)
  - install -d -m 700 -o ${username} -g ${username} /var/cache/ansible/facts

  # Sanity: show versions (non-blocking)
  - bash -lc 'echo PATH=$PATH; which ansible || /opt/ansible/bin/ansible --version || true'
